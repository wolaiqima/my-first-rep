📘 学习记录：5.6 循环（for & while）
本节掌握了 Python 中常见的两种循环结构：
for ... in：用于遍历列表、字符串、集合等可迭代对象；
while：用于在条件为真的情况下持续执行循环体。
🚩我的疑问与理解：
起初我不太明白循环内部是如何控制迭代顺序的，后来结合 list 和 tuple 的顺序性逐渐理解了 for item in list 的机制。
在 while 循环中，我特别注意了避免死循环的写法，学会了使用 break 和 continue 进行循环控制。

📘 学习记录：5.7 使用 dict 和 set
这一节是目前我提问最多、也感到最有收获的一部分。

✅ 关于 dict：
我学会了用 in 判断 key 是否存在，以及使用 .get() 方法避免 key 错误；
我特别关注了 .get('key', 默认值) 和 .pop('key') 的区别，理解了它们在实际代码中的容错性；
通过对“key 必须是不可变对象”这个原则的反复提问，我理解了为什么 list 不能作为 key，而 tuple 可以；
我通过类比“柜子和标签”的方式理解了字典的哈希机制，清楚了字典并不是顺序结构，而是基于哈希计算 key 对应 value 的位置。

✅ 关于 set：
我一开始误以为 set 也是有序的，但通过练习明白了它只是“放在一起”的一组不重复元素，实际是无序的；
我验证了 list 不能放入 set，原因与 dict 中 key 的限制相同：list 是可变的，无法哈希；
我还区分了 set 可以“判断有没有”，但不能用下标或顺序访问，这和 list 的行为完全不同；
最后我意识到：dict 和 set 在内部实现上都是基于哈希表，最大的区别只是 dict 存了键值对，而 set 只存 key。

🧠 总结感想：
这两个小节帮助我从“会用”进一步进入了“理解背后原理”的阶段，特别是在哈希机制、不可变对象、查找与结构差异等方面，我通过提问与练习深入掌握了 Python 中 dict 和 set 的底层逻辑。
